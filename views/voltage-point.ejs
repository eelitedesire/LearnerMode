<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Energy System - Voltage Points Settings</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .card {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            border-radius: 8px;
            border: none;
        }
        .card-header {
            background-color: #f1f8ff;
            border-bottom: 1px solid #e3f2fd;
            border-radius: 8px 8px 0 0 !important;
        }
        .change-item {
            cursor: pointer;
            padding: 15px;
            border-bottom: 1px solid #eee;
            transition: background-color 0.2s;
        }
        .change-item:hover {
            background-color: #f8f9fa;
        }
        .change-item:last-child {
            border-bottom: none;
        }
        .change-value {
            font-weight: 500;
        }
        .inverter-heading {
            background-color: #e9ecef;
            padding: 10px 15px;
            font-weight: 600;
            margin-top: 15px;
            border-radius: 5px;
        }
        .modal-header {
            background-color: #f1f8ff;
        }
        .timestamp {
            font-size: 0.85rem;
            color: #6c757d;
        }
        .setting-title {
            font-weight: 600;
            font-size: 1.1rem;
        }
        .edit-icon {
            color: #007bff;
            opacity: 0.7;
        }
        .change-item:hover .edit-icon {
            opacity: 1;
        }
        .nav-link.active {
            font-weight: bold;
            color: #007bff !important;
        }
        .voltage-list {
            max-height: 500px;
            overflow-y: auto;
        }
        .voltage-point-table th,
        .voltage-point-table td {
            vertical-align: middle;
        }
        .no-points-message {
            padding: 30px;
            text-align: center;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-4">
        <div class="container">
            <a class="navbar-brand" href="/"><i class="fas fa-solar-panel me-2"></i>Energy System Monitor</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/"><i class="fas fa-home me-1"></i>Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/grid-charge"><i class="fas fa-plug me-1"></i>Grid Charge</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/energy-pattern"><i class="fas fa-battery-three-quarters me-1"></i>Energy Pattern</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/work-mode"><i class="fas fa-cogs me-1"></i>Work Mode</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/battery-charging"><i class="fas fa-charging-station me-1"></i>Battery Charging</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/voltage-point"><i class="fas fa-bolt me-1"></i>Voltage Points</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/rules"><i class="fas fa-tasks me-1"></i>Rules</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/learner"><i class="fas fa-brain me-1"></i>Learner</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container">
        <!-- Alerts container -->
        <div id="alerts-container"></div>

        <div class="row mb-4">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="fas fa-bolt me-2"></i>Voltage Points</h5>
                        <div>
                            <button class="btn btn-outline-primary me-2" id="view-history-btn">
                                <i class="fas fa-history me-1"></i> View History
                            </button>
                            <button class="btn btn-primary" id="refresh-voltage-points">
                                <i class="fas fa-sync-alt me-1"></i> Refresh
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            Voltage points are dynamically detected from MQTT. Click on any voltage point to modify its value.
                        </div>
                        
                        <div class="table-responsive">
                            <table class="table table-hover voltage-point-table">
                                <thead>
                                    <tr>
                                        <th>Voltage Point & Topic</th>
                                        <th>Value (V)</th>
                                        <th>Last Updated</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="voltage-points-list">
                                    <tr>
                                        <td colspan="4" class="text-center py-4">
                                            <div class="spinner-border text-primary" role="status"></div>
                                            <div class="mt-2">Loading voltage points...</div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-info-circle me-2"></i>Voltage Point Info</h5>
                    </div>
                    <div class="card-body" id="voltage-point-info">
                        <p>Voltage points control how your energy system operates at different battery voltage levels. These settings help optimize battery life and system performance.</p>
                        
                        <h6 class="mt-4">Voltage Points Summary</h6>
                        <ul class="list-group list-group-flush mb-3">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Active Voltage Points
                                <span class="badge bg-success rounded-pill" id="active-voltage-points">--</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Inverters
                                <span class="badge bg-primary rounded-pill" id="inverter-count">--</span>
                            </li>
                        </ul>
                        
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            Changes to voltage points take effect immediately. Use caution when modifying these values.
                        </div>
                    </div>
                </div>
                
                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-history me-2"></i>Recent Changes</h5>
                    </div>
                    <div class="card-body">
                        <div class="voltage-list" id="recent-changes">
                            <div class="text-center py-4">
                                <div class="spinner-border text-primary" role="status"></div>
                                <div class="mt-2">Loading recent changes...</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Voltage Point Modal -->
    <div class="modal fade" id="editVoltagePointModal" tabindex="-1" aria-labelledby="editVoltagePointModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editVoltagePointModalLabel">Edit Voltage Point</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editVoltagePointForm">
                        <input type="hidden" id="edit-inverter">
                        <input type="hidden" id="edit-point-number">
                        
                        <div class="mb-3">
                            <label class="form-label fw-bold" id="voltage-point-name-display">Voltage Point</label>
                            <p class="text-muted small" id="voltage-point-inverter-display">Inverter</p>
                            <p class="text-muted small" id="voltage-point-topic-display" style="word-break: break-all;">Topic</p>
                        </div>
                        
                        <div class="mb-3">
                            <label for="edit-voltage" class="form-label">Voltage Value (V)</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="edit-voltage" min="40" max="60" step="0.1" required>
                                <span class="input-group-text">V</span>
                            </div>
                            <div class="form-text">Recommended range: 40V - 60V for 48V systems</div>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Current Value</label>
                            <p class="form-control-plaintext" id="current-voltage-display">-</p>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="save-voltage-point-btn">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Voltage Point History Modal -->
    <div class="modal fade" id="voltagePointHistoryModal" tabindex="-1" aria-labelledby="voltagePointHistoryModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="voltagePointHistoryModalLabel">Voltage Point Change History</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Date & Time</th>
                                    <th>Voltage Point</th>
                                    <th>Old Value</th>
                                    <th>New Value</th>
                                </tr>
                            </thead>
                            <tbody id="voltage-history-list">
                                <tr>
                                    <td colspan="4" class="text-center py-4">
                                        <div class="spinner-border text-primary" role="status"></div>
                                        <div class="mt-2">Loading history...</div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    
    <script>
        // Global variables
        let voltagePoints = {};
        
        // Initialize the page
        $(document).ready(function() {
            // Load voltage points
            loadVoltagePoints();
            
            // Load recent changes
            loadRecentChanges();
            
            // Set up event listeners
            setupEventListeners();
        });
        
        // Setup event listeners
        function setupEventListeners() {
            // Refresh button
            $('#refresh-voltage-points').click(function() {
                loadVoltagePoints();
                showAlert('info', 'Voltage points refreshed');
            });
            
            // Save voltage point button
            $('#save-voltage-point-btn').click(function() {
                saveVoltagePoint();
            });
            
            // View history button
            $('#view-history-btn').click(function() {
                loadVoltagePointHistory();
                const historyModal = new bootstrap.Modal(document.getElementById('voltagePointHistoryModal'));
                historyModal.show();
            });
        }
        
        // Load voltage points from the API
        function loadVoltagePoints() {
    $.ajax({
        url: '/api/voltage-point-changes',
        method: 'GET',
        success: function(response) {
            // Try to parse the response flexibly
            let changes = response;
            
            // If response is an object, try to convert to array
            if (!Array.isArray(response)) {
                // Check if it might be an object with numeric or string keys
                changes = Object.values(response);
            }
            
            // If still not an array or empty, show no points message
            if (!Array.isArray(changes) || changes.length === 0) {
                $('#voltage-points-list').html('<tr><td colspan="4" class="text-center">No voltage points detected</td></tr>');
                $('#active-voltage-points').text('0');
                $('#inverter-count').text('0');
                return;
            }
            
            // Process the changes
            const voltagePoints = {};
            const processedTopics = new Set();
            
            changes.forEach(change => {
                // Extract inverter and point information
                const topicParts = change.topic ? change.topic.split('/') : [];
                
                // Find inverter and point details
                const inverterPart = topicParts.find(part => part.startsWith('inverter_')) || 'unknown_inverter';
                const pointPart = topicParts.find(part => part.includes('voltage_point_')) || 'unknown_point';
                
                // Skip if we've already processed this exact topic
                if (processedTopics.has(change.topic)) return;
                processedTopics.add(change.topic);
                
                // Determine the value (check multiple possible value fields)
                const value = change.new_value || change.value || change.current_value;
                
                if (!inverterPart || !pointPart || !value) return;
                
                // Create nested structure
                if (!voltagePoints[inverterPart]) {
                    voltagePoints[inverterPart] = {};
                }
                
                // Store the point details
                voltagePoints[inverterPart][pointPart] = {
                    value: parseFloat(value),
                    topic: change.topic,
                    timestamp: change.timestamp || new Date().toISOString()
                };
            });
            
            // Prepare to render the points
            const inverterCount = Object.keys(voltagePoints).length;
            const pointCount = Object.values(voltagePoints)
                .reduce((total, inverter) => total + Object.keys(inverter).length, 0);
            
            // Update summary
            $('#active-voltage-points').text(pointCount);
            $('#inverter-count').text(inverterCount);
            
            // Call the existing display function
            displayVoltagePoints(voltagePoints);
        },
        error: function(xhr, status, error) {
            console.error('Error loading voltage points:', status, error);
            $('#voltage-points-list').html(`<tr><td colspan="4" class="text-center">Error loading voltage points</td></tr>`);
            $('#active-voltage-points').text('0');
            $('#inverter-count').text('0');
        }
    });
}
        // Display voltage points
        function displayVoltagePoints(settings) {
            // Reset voltage points variable
            voltagePoints = {};
            
            // Extract voltage points from settings
            let foundVoltagePoints = false;
            let voltagePointsCount = 0;
            
            // Look through all settings for voltage_point related items
            const inverters = [];
            
            // First collect all inverters
            for (const topic in settings) {
                for (const settingKey in settings[topic]) {
                    if (settingKey.includes('voltage_point')) {
                        const match = settingKey.match(/voltage_point_(\d+)/);
                        if (match) {
                            const pointNumber = match[1];
                            const inverterMatch = topic.match(/inverter_(\d+)/);
                            if (inverterMatch) {
                                const inverterId = inverterMatch[1];
                                if (!inverters.includes(`inverter_${inverterId}`)) {
                                    inverters.push(`inverter_${inverterId}`);
                                }
                            }
                        }
                    }
                }
            }
            
            // If no inverters with voltage points found, check all settings more generically
            if (inverters.length === 0) {
                for (const topic in settings) {
                    for (const settingKey in settings[topic]) {
                        if (settingKey.includes('voltage_point')) {
                            foundVoltagePoints = true;
                            voltagePointsCount++;
                            
                            const pointNumber = settingKey.replace('voltage_point_', '').replace('/state', '');
                            const value = settings[topic][settingKey];
                            
                            // Store in our voltage points object
                            if (!voltagePoints['unknown']) {
                                voltagePoints['unknown'] = {};
                            }
                            voltagePoints['unknown'][pointNumber] = {
                                value: parseFloat(value),
                                topic: `${topic}/${settingKey}/set`
                            };
                        }
                    }
                }
            } else {
                // Process each inverter's voltage points
                inverters.forEach(inverter => {
                    voltagePoints[inverter] = {};
                    
                    for (const topic in settings) {
                        if (topic.includes(inverter)) {
                            for (const settingKey in settings[topic]) {
                                if (settingKey.includes('voltage_point')) {
                                    foundVoltagePoints = true;
                                    voltagePointsCount++;
                                    
                                    const match = settingKey.match(/voltage_point_(\d+)/);
                                    if (match) {
                                        const pointNumber = match[1];
                                        const value = settings[topic][settingKey];
                                        
                                        // Store in our voltage points object
                                        voltagePoints[inverter][pointNumber] = {
                                            value: parseFloat(value),
                                            topic: `${inverter}/${settingKey}/set`
                                        };
                                    }
                                }
                            }
                        }
                    }
                });
            }
            
            // Update UI with count of active voltage points and inverters
            $('#active-voltage-points').text(voltagePointsCount);
            $('#inverter-count').text(Object.keys(voltagePoints).length);
            
            // Render the list
            renderVoltagePointsList();
        }
        
        // Render the voltage points list in the table
        function renderVoltagePointsList() {
            let html = '';
            let foundPoints = false;
            
            // Loop through all inverters
            for (const inverter in voltagePoints) {
                const inverterId = inverter !== 'unknown' ? inverter : 'Unknown';
                const displayName = inverterId !== 'Unknown' ? 
                    inverterId.replace('_', ' ').charAt(0).toUpperCase() + inverterId.slice(1).replace('_', ' ') : 
                    'Generic';
                
                // Check if this inverter has any voltage points
                const pointCount = Object.keys(voltagePoints[inverter]).length;
                if (pointCount === 0) continue;
                
                foundPoints = true;
                
                // Add inverter header
                html += `<tr class="table-secondary"><th colspan="4">${displayName}</th></tr>`;
                
                // Sort voltage points by number
                const sortedPoints = Object.keys(voltagePoints[inverter])
                    .sort((a, b) => parseInt(a) - parseInt(b));
                
                // Add each voltage point
                sortedPoints.forEach((pointNumber, index) => {
                    const point = voltagePoints[inverter][pointNumber];
                    const pointName = `Voltage Point ${pointNumber}`;
                    const topicDisplay = point.topic || `${inverter}/voltage_point_${pointNumber}/set`;
                    
                    html += `
                        <tr data-inverter="${inverter}" data-point="${pointNumber}" data-value="${point.value}" data-topic="${topicDisplay}">
                            <td>
                                <div class="d-flex flex-column">
                                    <strong>${pointName}</strong>
                                    <small class="text-muted topic-display">${topicDisplay}</small>
                                </div>
                            </td>
                            <td><span class="badge bg-primary">${point.value} V</span></td>
                            <td>
                                <span class="timestamp">
                                    <i class="fas fa-clock me-1"></i>
                                    ${moment().format('MM/DD HH:mm')}
                                </span>
                            </td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary edit-voltage-point">
                                    <i class="fas fa-edit me-1"></i>Edit
                                </button>
                            </td>
                        </tr>
                    `;
                });
            }
            
            if (!foundPoints) {
                html = `
                    <tr>
                        <td colspan="4" class="no-points-message">
                            <i class="fas fa-info-circle me-2"></i>
                            No voltage points detected. Points will appear here as they are discovered from MQTT.
                        </td>
                    </tr>
                `;
            }
            
            $('#voltage-points-list').html(html);
            
            // Make entire row clickable
            $('#voltage-points-list tr').click(function() {
                // Skip if this is a header row
                if ($(this).hasClass('table-secondary')) return;
                
                const inverter = $(this).data('inverter');
                const point = $(this).data('point');
                const value = $(this).data('value');
                const topic = $(this).data('topic');
                
                if (inverter && point) {
                    openEditModal(inverter, point, value, topic);
                }
            });
            
            // Add click handler to edit buttons
            $('.edit-voltage-point').click(function(e) {
                e.stopPropagation(); // Prevent the row click event
                
                const row = $(this).closest('tr');
                const inverter = row.data('inverter');
                const point = row.data('point');
                const value = row.data('value');
                const topic = row.data('topic');
                
                openEditModal(inverter, point, value, topic);
            });
        }
        
        // Load recent changes
        function loadRecentChanges() {
            $.ajax({
                url: '/api/voltage-point-changes',
                method: 'GET',
                success: function(response) {
                    displayRecentChanges(response);
                },
                error: function() {
                    $('#recent-changes').html('<div class="alert alert-warning">Failed to load recent changes</div>');
                }
            });
        }
        
        // Display recent changes
        function displayRecentChanges(changes) {
            if (!changes || changes.length === 0) {
                $('#recent-changes').html('<div class="text-center p-3">No recent changes found</div>');
                return;
            }
            
            // Sort changes by timestamp (newest first)
            changes.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
            
            // Take only the 10 most recent changes
            const recentChanges = changes.slice(0, 10);
            
            let html = '';
            
            recentChanges.forEach(change => {
                const timestamp = moment(change.timestamp).format('MM/DD HH:mm');
                const topicParts = change.topic.split('/');
                let pointName = 'Voltage Point';
                
                // Try to extract the point number from the topic
                for (const part of topicParts) {
                    if (part.includes('voltage_point_')) {
                        pointName = `Voltage Point ${part.replace('voltage_point_', '')}`;
                        break;
                    }
                }
                
                // Extract inverter from topic
                let inverter = 'unknown';
                for (const part of topicParts) {
                    if (part.includes('inverter_')) {
                        inverter = part;
                        break;
                    }
                }
                
                const inverterDisplay = inverter !== 'unknown' ? 
                    inverter.replace('_', ' ').charAt(0).toUpperCase() + inverter.slice(1).replace('_', ' ') : 
                    'Unknown';
                
                html += `
                    <div class="p-2 border-bottom">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <div class="fw-bold">${change.topic}</div>
                                <div class="text-muted small">${inverterDisplay}</div>
                            </div>
                            <div class="text-end">
                                <div>${timestamp}</div>
                                <div class="badge bg-success">${change.new_value} V</div>
                            </div>
                        </div>
                    </div>
                `;
            });
            
            $('#recent-changes').html(html);
        }
        
        // Load voltage point history
        function loadVoltagePointHistory() {
            $.ajax({
                url: '/api/voltage-point-changes',
                method: 'GET',
                success: function(response) {
                    displayVoltagePointHistory(response);
                },
                error: function() {
                    $('#voltage-history-list').html('<tr><td colspan="4" class="text-center">Failed to load history</td></tr>');
                }
            });
        }
        
        // Display voltage point history
        function displayVoltagePointHistory(changes) {
            if (!changes || changes.length === 0) {
                $('#voltage-history-list').html('<tr><td colspan="4" class="text-center">No history found</td></tr>');
                return;
            }
            
            // Sort changes by timestamp (newest first)
            changes.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
            
            let html = '';
            
            changes.forEach(change => {
                const timestamp = moment(change.timestamp).format('MM/DD/YYYY HH:mm:ss');
                
                html += `
                    <tr>
                        <td>${timestamp}</td>
                        <td>${change.topic}</td>
                        <td>${change.old_value || '--'} V</td>
                        <td>${change.new_value} V</td>
                    </tr>
                `;
            });
            
            $('#voltage-history-list').html(html);
        }
        
        // Open the edit modal for a voltage point
        function openEditModal(inverter, pointNumber, currentValue, topic) {
            // Set hidden fields
            $('#edit-inverter').val(inverter);
            $('#edit-point-number').val(pointNumber);
            
            // Set display values
            $('#voltage-point-name-display').text(`Voltage Point ${pointNumber}`);
            
            const inverterDisplay = inverter !== 'unknown' ? 
                inverter.replace('_', ' ').charAt(0).toUpperCase() + inverter.slice(1).replace('_', ' ') : 
                'Generic';
            
            $('#voltage-point-inverter-display').text(inverterDisplay);
            $('#voltage-point-topic-display').text(topic || `${inverter}/voltage_point_${pointNumber}/set`);
            $('#current-voltage-display').text(`${currentValue} V`);
            
            // Set the current value in the input field
            $('#edit-voltage').val(currentValue);
            
            // Show the modal
            const editModal = new bootstrap.Modal(document.getElementById('editVoltagePointModal'));
            editModal.show();
        }
        
        // Save the voltage point
        function saveVoltagePoint() {
            const inverter = $('#edit-inverter').val();
            const pointNumber = $('#edit-point-number').val();
            const value = $('#edit-voltage').val();
            
            // Validate input
            if (!value) {
                showAlert('warning', 'Please enter a voltage value', true);
                return;
            }
            
            // Get the topic for this voltage point
            let topic = '';
            if (voltagePoints[inverter] && voltagePoints[inverter][pointNumber]) {
                topic = voltagePoints[inverter][pointNumber].topic;
            } else {
                // If topic not found in our cached points, construct it
                topic = `${inverter}/voltage_point_${pointNumber}/set`;
            }
            
            // Send to server
            $.ajax({
                url: '/api/command',
                method: 'POST',
                data: {
                    topic: topic,
                    value: value
                },
                success: function(response) {
                    if (response.success) {
                        // Hide the modal
                        const editModal = bootstrap.Modal.getInstance(document.getElementById('editVoltagePointModal'));
                        editModal.hide();
                        
                        showAlert('success', `Voltage Point ${pointNumber} updated successfully`);
                        
                        // Update our local data
                        if (!voltagePoints[inverter]) {
                            voltagePoints[inverter] = {};
                        }
                        
                        voltagePoints[inverter][pointNumber] = {
                            value: parseFloat(value),
                            topic: topic
                        };
                        
                        // Update UI
                        renderVoltagePointsList();
                        
                        // Refresh data after a short delay
                        setTimeout(() => {
                            loadVoltagePoints();
                            loadRecentChanges();
                        }, 2000);
                    } else {
                        showAlert('danger', `Failed to update voltage point: ${response.message || 'Unknown error'}`, true);
                    }
                },
                error: function(error) {
                    showAlert('danger', `Error updating voltage point: ${error.responseJSON?.error || 'Server error'}`, true);
                }
            });
        }
        
        function showAlert(type, message, inModal = false) {
            const alertId = 'alert-' + Date.now();
            const alertHtml = `
                <div id="${alertId}" class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
            
            if (inModal) {
                // Insert at the top of the modal body
                $('#editVoltagePointModal .modal-body').prepend(alertHtml);
            } else {
                // Insert at the top of the alerts container
                $('#alerts-container').prepend(alertHtml);
            }
            
            // Automatically remove alert after 5 seconds
            setTimeout(() => {
                $(`#${alertId}`).alert('close');
            }, 5000);
        }
    </script>
</body>
</html>
